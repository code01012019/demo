[root@localhost ~]# vi /etc/yum.repos.d/mongodb-org-5.0.repo
[mongodb-org-5.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/5.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-5.0.asc


[root@localhost ~]# yum install -y mongodb-org

## start stop Service
[root@localhost ~]# systemctl start mongod
[root@localhost ~]# systemctl status mongod

## start the Mongosh session to run MongoDB queries
[root@localhost ~]# mongosh

## create Hellodb
test> use hellodb
switched to db hellodb
hellodb> show dbs
admin 41 kB
config 12.3 kB
local 41 kB
hellodb>

## By default, MongoDB does not have access control enabled, so there is no default user or password. Use the command line option --auth or the security.authorization configuration file setting to enable access control.

The following are the steps that you can follow. First, open a terminal and start MongoDB Daemon.

mongod --port 27017 --dbpath /data/db

## Enter the mongo shell in a new terminal tab.
mongo --port 27017

## show users
db.getUsers();

## Create an admin user.
use admin
db.createUser(
  {
    user: "admindb",
    pwd: "admindb",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" },
             { role: "dbAdminAnyDatabase", db: "admin" },
             { role: "readWriteAnyDatabase", db: "admin" }
           ]
  }
)

## Connecting to the Database with the MongoDB Shell
mongo --host mongodb0.example.com \
  --port 27017 \
  --username your_admin_user \
  --password

mongo --host web1 --port 27017 --username root --password root

Note: To force mongo to prompt for a password, enter the --password option as the last option and leave out the argument.

## Adding the User
Use the db.createUser() method to add the user to the specified database. Adding a user with options is easy, it’s essentially inserting a user document into a NoSQL database!

use atbdb               // specify the DB
db.createUser(
  {
    user: "adminUser",
    pwd: passwordPrompt(),  // or cleartext password if you wish
    roles: [
       { role: "read", db: "hellodb" },
       { role: "readWrite", db: "atbdb" }
    ]
  }
)

In the example above, after connecting to the MongoDB instance, we attach to the atbdb database to execute our db.createuser() command. The database that we use will act as the user’s Authentication Database.


use atbdb              
db.createUser(
  {
    user: "atbuser",
    pwd: "atbuser",
    roles: [
       { role: "read", db: "hellodb" },
       { role: "readWrite", db: "atbdb" }
    ]
  }
)
## check actual db
db

## show dbs
show dbs


## db is the used Database / users is the table / insert into table users values
db.users.insert({name: “ali”, designation: “manager”, age:55})
db.users.insert({name: “khalil”, designation: “supervisor”, age:37})
db.users.insert({name: “ahmed”, designation: “admin”, age:25})

## drop actual db
db.dropDatabase()


## Remove MongoDB
[root@localhost ~]# yum erase $(rpm -qa | grep mongodb-org) -y
[root@localhost ~]# rm -rf /var/log/mongodb
[root@localhost ~]# rm -rf /var/lib/mongo
